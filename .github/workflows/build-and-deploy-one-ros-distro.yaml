# This workflow builds and pushes images to Github Packages.

name: Build and Deploy to Github Packages

on:
  workflow_dispatch:
    inputs:
      ros_distro:
        type: choice
        description: ROS Distro to build
        options:
        - noetic
        - humble
        - iron
        - rolling
      image_registry:
        description: The container registry to push to (must be ghcr.io)
        default: "ghcr.io/sloretz"
        type: string
      image_name:
        description: The name of the image
        default: "ros"
        type: string
  workflow_call:
    inputs:
      ros_distro:
        description: ROS Distro to build
        type: string
        required: true
      image_registry:
        description: The container registry to push to (must be ghcr.io)
        default: "ghcr.io/sloretz"
        type: string
      image_name:
        description: The name of the image
        default: "ros"
        type: string

permissions:
      packages: write
      contents: read

jobs:

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be  # v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: Install dependencies
        run: ./scripts/install_dependencies.bash

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@9184318aae1ee5034fbfbacc0388acf12669171f  # v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ${{ inputs.image_registry }}

      - name: Dry Run
        id: Dry Run
        run: |
          output=$(./scripts/build_images.py \
            --rosdistro "${{ inputs.ros_distro }}" \
            --registry "${{ inputs.image_registry }}" \
            --name "${{ inputs.image_name }}" \
            --dry-run)
            echo ${output}
          manifests=$(echo ${output} | grep MANIFEST | awk '{print $2}' | sort | uniq | tr '\n' ' ')
          images=$(echo ${output} | grep IMAGE | awk '{print $2}' | sort | uniq | tr '\n' ' ')
          echo "manifests=${manifests}" >> "${GITHUB_OUTPUT}"
          echo "images=${images}" >> "${GITHUB_OUTPUT}"

      - name: Build Images
        run: |
          ./scripts/build_images.py \
            --rosdistro "${{ inputs.ros_distro }}" \
            --registry "${{ inputs.image_registry }}" \
            --name "${{ inputs.image_name }}"

      - name: Push images to Github Packages
        id: deploy
        uses: redhat-actions/push-to-registry@9986a6552bc4571882a4a67e016b17361412b4df  # v2.7.1
        with:
          tags: ${{ steps.dry-run.outputs.images }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push manifests to Github Packages
        id: deploy
        uses: redhat-actions/push-to-registry@9986a6552bc4571882a4a67e016b17361412b4df  # v2.7.1
        with:
          tags: ${{ steps.dry-run.outputs.manifests }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Print Image URL
        run: echo "Pushed image to ${{ steps.deploy.outputs.registry-paths }}"

  call-test-deployed-images:
    needs: build-and-deploy
    uses: ./.github/workflows/test-deployed-images-one-ros-distro.yaml
    with:
      ros_distro: ${{ inputs.ros_distro }}
      image_registry: ${{ inputs.image_registry }}
      image_name: ${{ inputs.image_name }}
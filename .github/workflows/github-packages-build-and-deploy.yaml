# This workflow builds and pushes images to Github Packages.

name: Build and Deploy to Github Packages

on:
  workflow_dispatch:
    inputs:
      ros_distro:
        description: ROS Distro to build
        options:
        - noetic
        - humble
        - iron
        - rolling
      image_registry:
        description: The container registry to push to (must be ghcr.io)
        default: "ghcr.io/sloretz"
        type: string
      image_name:
        description: The name of the image
        default: "ros"
        type: string

permissions:
      packages: write
      contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: Install qemu-user-static
        run: sudo apt-get update && sudo apt-get install -y qemu-user-static

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@9184318aae1ee5034fbfbacc0388acf12669171f  # v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ${{ inputs.image_registry }}

      - name: Dry Run
        run: |
          ./scripts/build_images.py \
            --rosdistro "${{ inputs.ros_distro }}" \
            --name "${{ inputs.image_name }}" \
            --dry-run

      - name: Get Image Names
        id: image-names
        run: |
          tags=$(./scripts/build_images.py \
            --rosdistro "${{ inputs.ros_distro }}" \
            --name "${{ inputs.image_name }}" \
            --dry-run | grep CREATING | awk '{print $2}' | tr '\n' ' ')
          echo "tags=${tags}" >> "${GITHUB_OUTPUT}"

      - name: Build Images
        run: |
          ./scripts/build_images.py \
            --rosdistro "${{ inputs.ros_distro }}" \
            --name "${{ inputs.image_name }}"

      - name: Push to Github Packages
        id: deploy
        uses: redhat-actions/push-to-registry@9986a6552bc4571882a4a67e016b17361412b4df  # v2.7.1
        with:
          image: ${{ inputs.image_name }}
          registry: ${{ inputs.image_registry }}
          tags: ${{ steps.image-names.outputs.tags }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Print Image URL
        run: echo "Pushed image to ${{ steps.deploy.outputs.registry-paths }}"
